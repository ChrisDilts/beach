{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Build: Autoscaling Group, Launch Configuration",
    "Metadata": {

    },
    "Parameters": {
        "VPC" : {
            "Description" : "Which VPC to build in.",
            "Type" : "String",
            "Default" : "vpc-08c1410fa6ff98303"
        },
        "ASGsubnets" : {
            "Description" : "List of subnets to deploy ASG instances into.",
            "Type" : "List<AWS::EC2::Subnet::Id>",
            "ConstraintDescription" : "Must be at least 2 subnets in 2 AZ's in the same VPC."
        },
        "KeyPair" : {
            "Description" : "Select the KeyPair to use.",
            "Type" : "String",
            "Default" : "BeachCastle"
        },
        "EC2ImageId" : {
            "Description" : "EC2 Image ID.",
            "Type" : "String",
            "Default" : "ami-467ca739"
        },
        "EC2InstanceType" : {
            "Description" : "Instance size",
            "Type" : "String",
            "Default" : "t2.micro",
            "AllowedValues" : [ "t2.micro", "t2.small", "t2.medium"],
            "ConstraintDescription" : "Must be allowed EC2 type."
        }
    },
    "Resources": {
        "ASGLaunchConfig" : {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Properties" : {
                "KeyName" : {"Ref" : "KeyPair"},
                "ImageId" : {"Ref" : "EC2ImageId"},
                "SecurityGroups" : [{"Ref" : "ASGSecurityGroupHTTP"},{"Ref" : "ASGSecurityGroup"}],
                "InstanceType" : {"Ref" : "EC2InstanceType"}
            }
        },
        "ASG" : {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "AutoScalingGroupName" : "BeachCastleASG",
                "VPCZoneIdentifier" : {"Ref" : "ASGsubnets"},
                "TargetGroupARNs" : [{"Ref" : "ALBtargetGroup"}],
                "Cooldown" : "60",
                "DesiredCapacity" : "2",
                "LaunchConfigurationName" : {"Ref" : "ASGLaunchConfig"},
                "MaxSize" : "2",
                "MinSize" : "1"                
            }
        },
        "ASGSecurityGroupHTTP" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allow http ingress",
                "VpcId" : {"Ref" : "VPC"},
                "SecurityGroupIngress" : [{
                    "IpProtocol" : "-1",
                    "FromPort" : "80",
                    "ToPort" : "80",
                    "CidrIp" : "174.101.210.213/32"
                }],
                "SecurityGroupEgress" : [{
                    "IpProtocol" : "-1",
                    "FromPort" : "80",
                    "ToPort" : "80",
                    "CidrIp" : "174.101.210.213/32"
                }]
            }
        },
        "ASGSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Allow inter-SG communication",
                "VpcId" : {"Ref" : "VPC"},
                "SecurityGroupIngress" : [{
                    "IpProtocol" : "-1",
                    "CidrIp" : "10.0.0.0/16"
                }],
                "SecurityGroupEgress" : [{
                    "IpProtocol" : "-1",
                    "CidrIp" : "10.0.0.0/16"
                }]
            }
        },
        "ALB" : {
            "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties" : {
                "Subnets" : {"Ref" : "ASGsubnets"}
            }
        },
        "ALBListener" : {
            "Type" : "AWS::ElasticLoadBalancingV2::Listener",
            "Properties" : {
                "DefaultAction" :[{
                    "Type" : "forward",
                    "TargetGroupArn" : {"Ref" : "ALBtargetGroup"}
                }],
                "LoadBalancerArn" : {"Ref" : "ALB"},
                "Port" : "80",
                "Protocol" : "HTTP"
            }
        },
        "ALBtargetGroup" : {
            "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties" : {
                "HealthCheckIntervalSeconds" : "20",
                "HealthCheckTimeoutSeconds" : "5",
                "HealthyThresholdCount" : "3",
                "Port" : "80",
                "Protocol" : "HTTP",
                "UnhealthyThresholdCount" : 5,
                "VpcId" : {"Ref" : "VPC"}
            }
        }
    },
    "Outputs": {

    }
}